version: '3.8'

services:
  # Django + Gunicorn
  web:
    build: ./backend
    command: gunicorn --bind 0.0.0.0:8000 mapback.wsgi:application
    volumes:
      - ./backend:/app
      - ./backend/data:/app/data  # Mountiing the data folder containing the app 
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app-network

  # PostgreSQL Database
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: RideShare
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1972
    networks:
      - app-network

  # React (built and served via Nginx)
  frontend:
    image: node:18
    working_dir: /app/frontend
    volumes:
      - ./frontend:/app/frontend
    command: sh -c "npm install && npm run build"
    networks:
      - app-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./frontend/build:/usr/share/nginx/html/static  # React static files
      - ./backend/staticfiles:/usr/share/nginx/html/staticfiles  # Django static
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
      - frontend
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge